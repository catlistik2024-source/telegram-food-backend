const express = require('express');
const bodyParser = require('body-parser');
const fetch = require('node-fetch');

const app = express();
const PORT = process.env.PORT || 3000;

// === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
const BOT_TOKEN = '8201854169:AAH4YwzSKOG3miisen8jqfEM_pVFwhl1eNk'; // ‚Üê –ó–∞–º–µ–Ω–∏!
const ADMIN_CHAT_ID = '175653928'; // ‚Üê –ó–∞–º–µ–Ω–∏!
const WEB_APP_URL = 'https://telegram-food-app.vercel.app';

// === –ü–∞—Ä—Å–∏–º JSON ===
app.use(bodyParser.json());

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∑–∞–∫–∞–∑–∞–º–∏ ===
app.post('/api/order', async (req, res) => {
  const { id, name, price } = req.body;

  const message = `üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n\n${name} ‚Äî ${price} ‚ÇΩ`;

  try {
    await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: ADMIN_CHAT_ID,
        text: message,
        reply_markup: {
          inline_keyboard: [
            [{ text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑", callback_data: `accept_order_${id}` }]
          ]
        }
      })
    });

    res.json({ success: true });
  } catch (error) {
    console.error(error);
    res.status(500).json({ success: false, error: 'Failed to send order' });
  }
});

// === –í–µ–±—Ö—É–∫ –¥–ª—è Telegram –±–æ—Ç–∞ (–∫–æ–º–∞–Ω–¥—ã) ===
app.post(`/bot${BOT_TOKEN}`, async (req, res) => {
   // –î–æ–±–∞–≤—å –ª–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log('–ü—Ä–∏—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', req.body);
  
  const message = req.body.message;
  if (!message) {
    console.log('–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è');
    return res.status(200).send(); // ‚úÖ –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π!
  }

  const chatId = message.chat.id;
  const text = message.text;

  if (text === '/start') {
    const welcome = `üçî –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ë—ã—Å—Ç—Ä–æ–ï–¥–∞</b>!\n\n–ù–∞–∂–º–∏—Ç–µ /menu, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é.`;
    await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: welcome,
        parse_mode: 'HTML'
      })
    });
  }

  if (text === '/menu') {
    await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: 'üçΩ –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é:',
        reply_markup: {
          inline_keyboard: [
            [{ text: '–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é', web_app: { url: WEB_APP_URL } }]
          ]
        }
      })
    });
  }

  res.status(200).send();
});

// === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞) ===
app.get('/', (req, res) => {
  res.send('Backend is running! üöÄ');
});

// === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

});


